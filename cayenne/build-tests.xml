<?xml version="1.0"?>

<!-- ========================================== -->
<!-- Cayenne tests subproject buildfile.        -->
<!-- ========================================== -->
<project name="cayenne-tests" default="compile">
	<property name="test.dist.src" value="${dist}/src/tests"/>
	<property name="test.build" value="build/tests"/>
	<property name="test.src" value="src/tests/java"/>
	<property name="test.bin" value="src/tests/bin"/>
	<property name="test.resources" value="src/tests/resources"/>
	<property name="test.output" value="${test.build}/out/${cayenne.test.connection}"/>
	<property name="test.report" value="${test.build}/report/${cayenne.test.connection}"/>
	<property name="test.filter" value="**/*Tst.class"/>
	
    <path id="classpath">
    	<fileset dir="${otherlib.dir}">
			<include name="${junit.jar}"/>
		</fileset>
    	<fileset dir="${ant.home}/lib">
			<include name="*.jar"/>		
		</fileset>
		<fileset dir="${dist}/lib">
			<include name="cayenne.jar"/>
		</fileset>
		<pathelement path="build/tests/classes"/>
		<pathelement path="build/tests/deps"/>
    </path>
    

	<target name="compile">
		<ant antfile="build-subproj.xml" target="compile">
			<property name="subproj" value="tests"/>
		</ant>
	</target>
	
	<target name="dist-src" depends="dist-bin">
		<copy todir="${test.dist.src}">
			<fileset dir="${test.src}"/>		
			<fileset dir="${test.resources}"/>
        </copy>
	</target>

	<target name="dist-bin" depends="jar">        
        <!-- JUnit JAR is required for the tests to run. -->
        <copy file="${otherlib.dir}/${junit.jar}" todir="${dist}/lib"/>
	</target>
  
  
    <!-- ========================================== -->
    <!-- Builds tests JAR file.                     -->
    <!-- ========================================== -->
    <target name="jar" depends="compile">
    	<jar jarfile="${dist}/lib/cayenne-tests.jar" manifest="src/tests/MANIFEST.MF">
            <fileset dir="${test.build}/classes"/>
            <fileset dir="${test.resources}"/>
            <metainf dir="doc" includes="LICENSE"/>
        </jar>
    </target>
    
    
    <!-- ============================================= -->
    <!-- Runs and reports on tests.                    -->
    <!-- ============================================= -->
    <target name="test" depends="compile">
    	<!-- Run Java on itself to avoid classloader weirdness in JUnit -->
    	<java fork="true" classname="org.apache.tools.ant.Main" failonerror="true">
    		<arg value="-f"/>
    		<arg value="build-tests.xml"/>
    		<arg value="unit-test-report"/>
    		
			<sysproperty key="cayenne.test.connection" value="${cayenne.test.connection}"/>
			<sysproperty key="ant.home" value="${ant.home}"/>
			<sysproperty key="dist" value="${dist}"/>
			<sysproperty key="test.filter" value="${test.filter}"/>
			<classpath refid="classpath"/>
    	</java>
    </target>    
    
    <!-- ============================================= -->
    <!-- Runs Unit tests.                              -->
    <!-- ============================================= -->
    <target name="unit-test">
        <delete>
        	<fileset dir="${basedir}">
        		<include name="${test.output}/**"/>
        		<include name="${test.report}/**"/>
        	</fileset>
        </delete>
        
        <mkdir dir="${test.output}"/>
        <mkdir dir="${test.report}"/>
        
        <copy todir="build/tests/deps">
        	<fileset dir="src/tests/resources"/>
        </copy>
        
        
        <junit fork="false" 
               haltonfailure="no" 
               errorProperty="test.cayenne.failure"
               failureProperty="test.cayenne.failure">
               
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${test.output}">
                <fileset dir="${test.build}/classes">
                    <include name="${test.filter}"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <!-- ============================================= -->
    <!-- Reports failures.                             -->
    <!-- ============================================= -->
    <target name="unit-test-report" depends="unit-test" if="test.cayenne.failure">
    	<!-- HTML report is only generated on failures for speed -->
    	<junitreport todir="${test.report}">
			<fileset dir="${test.output}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${test.report}"/>
		</junitreport>
		
		
        <fail message="Cayenne tests failed, see files in ${test.output} for details"/>
    </target>
</project>

