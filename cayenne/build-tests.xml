<?xml version="1.0"?>

<!-- ========================================== -->
<!-- Cayenne tests subproject buildfile.        -->
<!-- ========================================== -->
<project name="cayenne-tests" default="compile">
	<property name="test.dist.src" value="${dist}/src/tests"/>
	<property name="test.build" value="build/tests"/>
	<property name="test.src" value="src/tests/java"/>
	<property name="test.bin" value="src/tests/bin"/>
	<property name="test.resources" value="src/tests/resources"/>
	<property name="test.output" value="${test.build}/out"/>
	<property name="test.report" value="${test.build}/report"/>
	
    <path id="classpath">
		<fileset dir="otherlib">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="build/cayenne/classes"/>
		<pathelement path="build/tests/classes"/>
		<pathelement path="src/tests/resources"/>
		<pathelement path="src/cayenne/java"/>
    </path>
    

	<target name="compile">
		<ant antfile="build-subproj.xml" target="compile">
			<property name="subproj" value="tests"/>
		</ant>
	</target>
	
	<target name="dist-src" depends="dist-bin">
		<copy todir="${test.dist.src}">
			<fileset dir="${test.src}"/>		
			<fileset dir="${test.resources}"/>
        </copy>
	</target>

	<target name="dist-bin" depends="jar">
	    <copy todir="${dist}/bin">
            <fileset dir="${test.bin}" includes="*.bat,*.sh"/>
        </copy>

        <chmod perm="gu+x">
            <fileset dir="${dist}/bin">
                <include name="**/*.sh"/>
            </fileset>
        </chmod>
        
        <!-- JUnit JAR is required for the tests to run. -->
        <copy file="otherlib/junit.jar" todir="${dist}/lib"/>
	</target>
  
  
    <!-- ========================================== -->
    <!-- Builds tests JAR file.                     -->
    <!-- ========================================== -->
    <target name="jar" depends="compile">
    	<jar jarfile="${dist}/lib/cayenne-tests.jar" manifest="src/tests/MANIFEST.MF">
            <fileset dir="${test.build}/classes"/>
            <fileset dir="${test.resources}"/>
            <metainf dir="doc" includes="LICENSE"/>
        </jar>
    </target>
    
    
    <!-- ============================================= -->
    <!-- Runs and reports on tests.                    -->
    <!-- ============================================= -->
    <target name="test" depends="compile,unit-test,unit-test-report"/>    
    
    <!-- ============================================= -->
    <!-- Runs Unit tests.                              -->
    <!-- ============================================= -->
    <target name="unit-test" depends="compile">
        <delete>
        	<fileset dir="${basedir}">
        		<include name="${test.output}/**"/>
        		<include name="${test.report}/**"/>
        	</fileset>
        </delete>
        
        <mkdir dir="${test.output}"/>
        <mkdir dir="${test.report}"/>
        
        <junit fork="false" 
               haltonfailure="no" 
               errorProperty="test.cayenne.failure"
               failureProperty="test.cayenne.failure">
            
            <sysproperty key="cayenne.test.connection" value="${cayenne.test.connection}"/>
            <classpath refid="classpath"/>
            
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${test.output}">
                <fileset dir="${test.build}/classes">
                    <include name="**/*Tst.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <!-- ============================================= -->
    <!-- Reports failures.                             -->
    <!-- ============================================= -->
    <target name="unit-test-report" depends="unit-test" if="test.cayenne.failure">
    	<!-- HTML report is only generated on failures for speed -->
    	<junitreport todir="${test.report}">
			<fileset dir="${test.output}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${test.report}"/>
		</junitreport>
		
		
        <fail message="Cayenne tests failed, see files in ${test.output} for details"/>
    </target>
</project>

