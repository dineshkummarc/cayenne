<?xml version="1.0"?>

<!-- ================================================= -->
<!--            Cayenne master build file.             -->
<!-- Serves as a facade to a set of private buildfiles.-->
<!-- ================================================= -->
<project name="cayenne" default="build" basedir=".">

    <!-- ============================================= -->
    <!-- Loads properties from default locations.      -->
    <!-- ============================================= -->
    <property file="build.properties" />
    <property file="${user.home}/build.properties" />
    <property file="default.properties" />
    
    
    <!-- ============================================= -->
    <!-- Derived Properties. These properties are      -->
    <!-- derived from other properties. You probably   -->
    <!-- don't want to redefine them.                  -->
    <!-- ============================================= -->
    <property name="dist" value="${dist.base}/${project.name}-${project.version}"/>


    <!-- ============================================= -->
    <!-- Prints help message describing build.xml use. -->
    <!-- ============================================= -->
    <target name="help">
        <echo>
     ******************************************************
     * TARGETS (also you can use "-projecthelp" ant flag 
     * to see targets):
     *  1. release    - creates a full Cayenne distribution.
     *  2. release-site
     *                - creates a full Cayenne website distribution.
     *  3. build      - (default target) builds all subproject JAR files.
     *  4. clean      - cleans temporary build and distribution directories
     *  5. clean-java - cleans all build directories, preserving the docs and such
     *  5. doc        - builds Cayenne documentation including Javadocs.
     *  6. api        - builds Javdoc API documentation.
     *  7. javacc     - runs javacc
     *  8. help       - prints this message
     *
     *
     * ENVIRONMENT:
     *  java.home = ${java.home}
     *  user.home = ${user.home}
     *  ant.home = ${ant.home}
     *  build.compiler = ${build.compiler}
     ******************************************************
         </echo>
    </target>


    <!-- ============================================= -->
    <!-- Creates a full release of Cayenne.            -->
    <!-- ============================================= -->
    <target name="release">
		<ant antfile="build-doc.xml" target="dist-src"/>
		<ant antfile="build-cayenne.xml" target="dist-src"/>
		<ant antfile="build-tests.xml" target="dist-src"/>
		
		<copy todir="${dist}" file="doc/release-notes/RELEASE-NOTES-${project.version}.txt"/>
		
		<tar tarfile="${dist.base}/${project.name}-src-${project.version}.tar">
			<tarfileset dir="${dist.base}">
				<include name="${project.name}-${project.version}/**"/>
			</tarfileset>
		</tar>
        <gzip src="${dist.base}/${project.name}-src-${project.version}.tar" 
              zipfile="${dist.base}/${project.name}-src-${project.version}.tar.gz"/>  
        <delete file="${dist.base}/${project.name}-src-${project.version}.tar"/>
    </target>
    
    
    
    <!-- ============================================= -->
    <!-- Deploys Cayenne web site in a local directory -->
    <!-- ============================================= -->
    <target name="release-site">
		<ant antfile="build-cayenne.xml" target="dist-src"/>
		<ant antfile="build-tests.xml" target="dist-src"/>
		<ant antfile="build-doc.xml" target="release-site"/>
    </target>
        

    <!-- ========================================== -->
    <!-- Builds all Cayenne Java subprojects.       -->
    <!-- ========================================== -->
    <target name="build">
		<ant antfile="build-cayenne.xml" target="dist-bin"/>
		<ant antfile="build-tests.xml" target="dist-bin"/>
    </target>


    <!-- ========================================== -->
    <!-- Cleans distribution files and subprojects. -->
    <!-- ========================================== -->
    <target name="clean" depends="clean-java">
        <delete dir="${dist.base}"/>
    </target>
    
    <target name="clean-java">
        <delete dir="${build}"/>
    </target>   
    
    <!-- ========================================== -->
    <!-- Updates any code generated by JavaCC.      -->
    <!-- ========================================== -->
    <target name="javacc">
        <ant antfile="build-cayenne.xml" target="javacc"/>
    </target>

    <!-- ========================================== -->
    <!-- Builds Cayenne documenatation.             -->
    <!-- ========================================== -->
    <target name="doc">
        <ant antfile="build-doc.xml" target="doc"/>
    </target>


    <!-- ========================================== -->
    <!-- Builds API documenatation.                 -->
    <!-- Depends on "compile-subprojects", since    -->
    <!-- some of the classes are generated on the   -->
    <!-- fly.                                       -->
    <!-- ========================================== -->
    <target name="api">
        <ant antfile="build-doc.xml" target="api"/>
    </target>    
</project>


