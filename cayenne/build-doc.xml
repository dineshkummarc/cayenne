<?xml version="1.0"?>

<!-- ================================================= -->
<!--         Cayenne documentation buildfile.          -->
<!--             (called from build.xml)               -->
<!-- ================================================= -->
<project name="cayenne-doc" default="doc" basedir=".">	  
    <path id="classpath">
    	<pathelement path="${ant.home}/lib/ant.jar"/>
        <fileset dir="${otherlib.dir}">
            <include name="**.jar"/>
        </fileset>
    </path>
    

    <!-- ============================================= -->
    <!-- Deploys Cayenne web site in a local directory -->
    <!-- ============================================= -->
    <target name="release-site" depends="nositedir,prepare,doc">
         <mkdir dir="${site.dir}/cayenne"/>         
         
         <!-- copy all but HTML -->
         <copy todir="${site.dir}/cayenne">
             <fileset dir="${dist}/doc"> 
             	<exclude name="**/*.html"/>
             </fileset>
         </copy>
         
         <!-- do replacement in HTML files -->
         <copy todir="${site.dir}/cayenne">
             <fileset dir="${dist}/doc"> 
             	<include name="**/*.html"/>
             </fileset>
             
		<filterset begintoken="!--" endtoken="--">
			<filter token="SFLOGO" value="${sf.logo}"/>
		</filterset>
		<filterset begintoken="!--" endtoken="--">
			<filter token="JNLOGO" value="${java.net.logo}"/>
		</filterset>
         </copy>
    </target>
    
    <target name="release-unstable-site" depends="nositedir,prepare,doc">
        <!-- make sure we do not override STABLE docs, so update --> 
	<!-- the frontpage and download page  -->
         <mkdir dir="${site.dir}/cayenne"/>     

         <!-- copy all but HTML -->
         <copy todir="${site.dir}/cayenne">
             <fileset dir="${dist}/doc">
                <exclude name="**/*.html"/>
             </fileset>
         </copy>

         <!-- do replacement in HTML files -->
         <copy todir="${site.dir}/cayenne">
             <fileset dir="${dist}/doc">
                <include name="index.html"/>
                <include name="download.html"/>
                <include name="news-archive.html"/>
             </fileset>

                <filterset begintoken="!--" endtoken="--">
                        <filter token="SFLOGO" value="${sf.logo}"/>
                </filterset>
                <filterset begintoken="!--" endtoken="--">
                        <filter token="JNLOGO" value="${java.net.logo}"/>
                </filterset>
         </copy>
    </target> 

    <!-- ========================================== -->
    <!-- Creates documentation directories.         -->
    <!-- ========================================== -->
    <target name="prepare">
        <tstamp/>
        <mkdir dir="${dist}/doc"/>
        <mkdir dir="${dist}/doc/grammar"/>
        <mkdir dir="${dist}/doc/dtd"/>
        
        <!-- Assemble project.xml -->
        <loadfile property="project.toc" srcFile="xdocs/stylesheets/toc.xml"/>
        <copy tofile="build/project.xml" file="xdocs/stylesheets/project.xml">
        	<filterset>
				<filter token="TOC" value="${project.toc}"/>
			</filterset>
        </copy>
    </target>    


    <!-- ========================================== -->
    <!-- Cleans distribution files and subprojects. -->
    <!-- ========================================== -->
    <target name="clean">
        <delete dir="${dist}/doc"/>
    </target>
    
    <!-- ========================================== -->
    <!-- Creates a full documentation build.         -->
    <!-- ========================================== -->
    <target name="dist-src" depends="doc"/>
    

    <!-- ========================================== -->
    <!-- Builds Cayenne documenatation.             -->
    <!-- ========================================== -->
    <target name="doc" depends="prepare,doc-img,grammars">
        <!-- copy all licenses & release notes -->
        <copy todir="${dist}/doc">
            <fileset dir="doc/licenses">
               <include name="**"/>
            </fileset>
         </copy>
         
		<copy tofile="${dist}/doc/RELEASE-NOTES.txt" file="doc/release-notes/RELEASE-NOTES-${project.version}.txt"/>
		<copy tofile="${dist}/doc/UPGRADE.txt" file="doc/upgrade/UPGRADE-${project.version}.txt"/>

        <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask">
            <classpath refid="classpath"/>
        </taskdef>
        
        <!-- Build site -->
        <anakia basedir="xdocs" destdir="${dist}/doc"
             extension=".html" style="cayenne.vsl"
             projectFile="../build/project.xml"
             excludes="**/stylesheets/**"
             includes="**/*.xml"
             lastModifiedCheck="true"
             templatePath="xdocs/stylesheets">
        </anakia>
        
        <!-- copy DTD's -->
        <copy todir="${dist}/doc/dtd">
            <fileset dir="src/cayenne/dtd">
                <include name="**/*.dtd"/>
            </fileset>
        </copy>
    </target>
    
    <!-- ========================================== -->
    <!-- Builds documentation for the JavaCC Grammars.               -->
    <!-- ========================================== -->
    <target name="grammars" depends="prepare">
    	
		<ant antfile="build-cayenne.xml" target="jjdoc">
			<property name="parser.doc.dir" value="${dist}/doc/grammar"/>
		</ant>
    </target>
    
    <!-- ========================================== -->
    <!-- Copies documentation images in the target  -->
    <!-- directory.                                 -->
    <!-- ========================================== -->
    <target name="doc-img">
        <!-- copy images -->
        <copy todir="${dist}/doc/images" filtering="no">
            <fileset dir="xdocs/images">
                <include name="**/*.gif"/>
                <include name="**/*.jpeg"/>
                <include name="**/*.png"/>
                <include name="**/*.jpg"/>
                <include name="**/*.css"/>
            </fileset>
        </copy>
        
        <!-- copy modeler buttons -->
        <mkdir dir="${dist}/doc/images/modeler"/>
        <copy todir="${dist}/doc/images/modeler" filtering="no" flatten="yes">
            <fileset dir="src/modeler/java">
                <include name="**/*.gif"/>
                <include name="**/*.jpeg"/>
                <include name="**/*.png"/>
                <include name="**/*.jpg"/>
            </fileset>
        </copy>
    </target>

    <target name="nositedir" unless="site.dir">
    	<fail>"site.dir" must be defined.</fail>
    </target>
</project>


