<document>
<title>User Guide - Deployment</title>
<toc name="toc-user-guide" chapter="12. Deployment"  subchapter="12.2 Web Applications"/>
<body>
     <section name="12. Deployment">      
           <subsection name="12.2 Web Applications" anchor="web">
               <subsection name="12.2.1 Initialization Servlet">
				<p>This configuration approach is based on calling ServletUtil.initializeSharedConfiguration
					 to initialize shared configuration object within a custom "initialization servlet" init() 
					 method on application startup. Session DataContexts are created on
					demand and retrieved via ServletUtil.getSessionContext(..) static method.</p>
				<table>
				<tr>
					<th>Servlet Spec. Compatibility:</th>
					<td>Any</td>
				</tr>
				<tr>
					<th>Participating classes:</th>
					<td>org.objectstyle.cayenne.conf.ServletUtil, javax.servlet.HttpServlet</td>
				</tr>
				<tr>
					<th>Allows cayenne.xml in WEB-INF/:</th>
					<td>Yes</td>
				</tr>
				<tr>
					<th>Session-bound DataContext:</th>
					<td>Yes</td>
				</tr>
				<tr>
					<th>Request thread-bound DataContext:</th>
					<td>No</td>
				</tr>
				</table>
               

<p>Sample initialization servlet code:</p>
<source>
package com.somepackage;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import org.objectstyle.cayenne.conf.ServletUtil;

public class MyServlet extends HttpServlet {
    public void init(ServletConfig config) throws ServletException {
        super.init(config);
  
        ServletUtil.initializeSharedConfiguration(config.getServletContext());
        
        // perfom any other application initialization...
    }
...
</source>
            
<p>Sample <code>web.xml</code> snippet: </p>      
<source>&amp;lt;servlet&amp;gt;
    &amp;lt;servlet-name&amp;gt;myservl&amp;lt;/servlet-name&amp;gt;
    &amp;lt;servlet-class&amp;gt;com.somepackage.MyServlet&amp;lt;/servlet-class&amp;gt;
    &amp;lt;load-on-startup&amp;gt;0&amp;lt;/load-on-startup&amp;gt;
&amp;lt;/servlet&amp;gt;</source>

<p>Sample DataContext retrieval code: </p>  
<source>
import org.objectstyle.cayenne.access.DataContext;
import org.objectstyle.cayenne.conf.ServletUtil;
import javax.servlet.http.HttpServletRequest;
...

// this code is executed within requrest, so assume we have access to request object
HttpServletRequest r;

// get session DataContext to perform database queries
DataContext context = ServletUtil.getSessionContext(r.getSession());
</source>
			</subsection>
</subsection>    
    </section>
</body>
</document>
