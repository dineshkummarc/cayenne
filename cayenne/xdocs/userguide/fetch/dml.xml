<document>
<title>User Guide - Using SelectQueries</title>
<toc name="toc-user-guide" chapter="7. Using Queries"/> 
<body>
    <section name="7. Using Queries">        
        <subsection name="7.7 Modifying Database Directly">
	<p>In most cases Cayenne takes care of all DML (data manipulation language) operations internally.
	But sometimes there is a need to modify database data directly, bypassing the object layer.
	There is a set of query classes that allow to do that. They are normally used for tasks 
	like database maintenance, etc. All the queries described below are executed using the following 
	DataContext method:</p>
	
	<ul>            		
		<li><code>public void <b>performQuery</b>(Query query, OperationObserver observer)</code><br/>
		Performs an arbitrary query, using callbacks methods of <code>observer</code> to communicate
		execution results back to the caller.
		<p></p>
		</li>
  	</ul>          	
	
	<p>There are a few classes that implement OperationObserver interface, but the most generic one that
	can be used in this case is <a 
	href="../../api/cayenne/org/objectstyle/cayenne/access/QueryResult.html">QueryResult</a>. It can be 
	instantiated and used as a second argument to <code>performQuery</code> method.
	</p>
	
		<subsection name="7.7.1 DML Queries">
		<p>There is a set of queries that allow to directly insert, delete and update
		database rows, using Cayenne mapping information:</p>
			<ul>            		
            	<li><code><b>InsertQuery</b></code><br/>
            	<p></p>
            	</li>
            	<li><code><b>UpdateQuery</b></code><br/>
            	<p></p>
            	</li>
            	<li><code><b>DeleteQuery</b></code><br/>
            	<p></p>
            	</li>
            </ul>
		</subsection>
		
		<subsection name="7.7.2 Executing Raw SQL">
		<p><a 
		href="../../api/cayenne/org/objectstyle/cayenne/query/SqlModifyQuery.html">SqlModifyQuery</a>
		allows to run an arbitrary non-selecting SQL, including INSERT, UPDATE, DELETE statements, as well
		as DDL statements (data definition language, e.g CREATE TABLE..., etc.).
		</p>
		<source>
String sql = "CREATE TABLE ARTIST (ARTIST_ID INTEGER NOT NULL, ARTIST_NAME VARCHAR(250))";
SqlModifyQuery query = new SqlModifyQuery(Artist.class, sql);
List data = context.performQuery(query, new QueryResult());
</source>
		</subsection>
        </subsection>
    </section>
</body>
</document>

