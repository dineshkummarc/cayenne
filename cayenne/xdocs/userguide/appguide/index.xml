<document>
<title>User Guide - Writing Cayenne Applications</title>
<toc name="toc-user-guide" chapter="5. Writing Cayenne Applications"/>
<body>
    <section name="5. Writing Cayenne Applications">
            <p>The following steps are needed to write and deploy a Cayenne 
            application. They are discussed in detail in the following chapters.</p>
            
            <p><strong>- Create Cayenne Project : </strong> 
            Cayenne project is a set of configuration files
            needed for a Java application to work with Cayenne. All these
            files are in XML format. The easiest way to create them is to use CayenneModeler GUI tool.
            But they can be created and edited by hand as well.
            </p>
            
            <p><strong>- Generate Java classes : </strong> In Cayenne
            <a href="../../api/cayenne/org/objectstyle/cayenne/map/ObjEntity.html">ObjEntities</a>
            map to Java classes that implement 
            <a href="../../api/cayenne/org/objectstyle/cayenne/DataObject.html">DataObject interface</a>. 
            CayenneModeler can be used to generate and maintain such Java classes.            
            </p>
            
            <p><strong>- Write an actual application : </strong> 
            Write a Java application taking advantage of Cayenne functionality. 
            Note: <a href="../datactxt/index.html">DataContext</a> is normally an access point to Cayenne.      
            </p>
            
            <p><strong>- Configure deployment environment : </strong> 
            Depending on how you plan to deploy your application you may 
            configure Cayenne in a few ways. Possible deployment scenarious include 
            standalone application, web application, EJB application.
            </p>
    </section>
</body>
</document>
