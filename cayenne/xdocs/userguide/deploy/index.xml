<document>
<title>User Guide - Writing Cayenne Applications</title>

    <properties>
        <author>Andrei Adamchik</author>
    </properties>
<navigator>
	<up>/userguide/index.html</up>
	<prev>/userguide/advmodel/flattenedrel.html</prev>
	<next>/userguide/deploy/standalone-application.html</next>
</navigator>    
<body>
     <section name="13. Deployment">        
           <p>Cayenne application deployment is about configuring the application 
           so that in runtime it could find a main project file (cayenne.xml) and 
           associated resources, such as DataMap and DataNode XML files.
           </p>
           
           <p>Central piece in Cayenne deployment is <a href=
           "../../api/cayenne/org/objectstyle/cayenne/conf/Configuration.html">Configuration</a>
            class. It locates and loads all the mapping and configuration information required 
            for Cayenne runtime. By default Configuration uses singleton model, i.e. normally 
            there is only one instance of either Configuration (or its subclass) that exists 
            in the application. This shared instance can be accessed via a static method like that:
            </p>

<source>import org.objectstyle.cayenne.conf.Configuration;
import org.objectstyle.cayenne.access.DataDomain;
...           
Configuration conf = Configuration.getSharedConfiguration();
DataDomain domain = conf.getDomain();
</source>
    </section>
</body>
</document>
