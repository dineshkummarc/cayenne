<document>
<title>CayenneModeler Guide - Introduction</title>
<toc name="toc-modeler-guide" chapter="1. Introduction"/>
<body>
   <section name="1. Introduction">
            <p>Cayenne stores mapping and deployment information using a set of XML files with a predefined
            format. These files can be always edited by hand. But Cayenne goes beyond that. A
            standard distribution contains CayenneModeler - a Java Swing GUI application for 
            maintenance of Object/Relational projects. It is much more than just an advanced XML editor. 
            It provides a full set of O/R tools, including:</p>
            <ul>
                <li>Manual Object/Relational mapping operations.</li>
            	<li>Reverse-engineering RDBMS schema into Cayenne DataMaps.</li>
            	<li>Generation of the database schema from the mapping information stored in DataMaps.</li>
            	<li>Java class generation from the mapping information stored in DataMaps.</li>
            	<li>Management of the project deployment structure and database connection
            	information.</li>
            	<li>Validation of created mappings.</li>
            </ul>
            
            <p>Among other things CayenneModeler allows new users to learn the concepts used in 
            Cayenne framework, its terminology, and the overall structure.</p> 
            
            <p>The following chapters of this Guide discuss how to use various functions of CayenneModeler.
            </p>
    </section>
</body>
</document>





