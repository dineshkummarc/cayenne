           Cayenne Release Notes 1.0b1 (Beta 1)
                 Date: [unreleased]
         ============================================

For the latest information go to the project web site at 
http://objectstyle.org/cayenne/



Changes in this release:
============================================
1. Added validation on ObjRelationship to report a warning on a toMany 
relationship with a Nullify delete rule, where the inverse relationship is 
mandatory (based on mandatory attributes).

2. Added Validation menu item on the File menu in the modeller.

3. Support for PostgreSQL and HSQLDB.

4. Modeler uses the platform's look&feel by default; this is
configurable in modeler.preferences (for now).

5. Modeler remembers window size, position and tree view width.

6. updated to commons-beanutils 1.6.1, log4j 1.2.8, junit 3.8.1 and ant 1.5.2

7. DbAdapter.buildAttribute now takes an extra parameter - a 
database specific strint typeName to allow reverse engineering of 
unhandled types.

8. DbAdapter.getTypeConverter is renamed to "getExtendedTypes', since the original
method name is confusing. 'getTypeConverter' is deprecated.

9. ExtendedType.toJdbcObject is deprecated and replaced with 'setJdbcObject'
to give ExtendedType more control over setting JDBC values.

10. Changed DataContext.commitChanges() to use a different, much more efficient, 
algorithm for committing changes. In its core is Ashwood graph library
(http://objectstyle.org/ashwood/) used to order operations according to the
database  constraints. Another major performance improvement is using JDBC batch
update feature for all DataContext update operations. Also a lot less temporary
objects are created during most operations.

11. DbAdapter.getQualifierFactory is deprecated and replaced with "getQualifierTranslator"
to remove unneeded indirection. QualifierTranslatorFactory class itself is deprecated.

12. org.objectstyle.cayenne.access.OperationSorter is deprecated, and replaced
with correct implementation: org.objectstyle.cayenne.access.util.DefaultSorter, based
on Ashwood library. 

13. DbAdapter now serves as a factory of DataNodes. This allows adapters to create
their own DataNode implementations. This opens the way for implementations interfacing
with non-JDBC data sources, such as LDAP.

14. Configuration is now significantly easier to use and subclass;
DefaultConfiguration now properly handles files in packages or other paths.

15. significantly better logging in ResourceLocator; this should help when
diagnosing e.g. Configuration loading problems.

