           Cayenne Release Notes 1.0a5 (Alpha 1)
                 Date: Dec 21, 2002
         ============================================

For the latest information go to the project web site at 
http://objectstyle.org/cayenne/



Changes in this release:
============================================
1. Created a project package to handle project file operations 
independently from GUI, switched CayenneModeler to this package.
This allowed to eliminate explicit "location" selection and fixed
lots of bugs.

2. Project structure update - now linked files have
preset extensions, and project file version is saved in "cayenne.xml".
Old format is still understood by Cayenne runtime. 

3. GUI would allow to upgrade from the earlier projects.

4. DataNode.DEFAULT_ADAPTER_CLASS is now an instance of Class, not String

5. Introduced a concept of queries by Class as opposed to symbolic 
entity names. A few items below are related to this change.

6. Created a new class EntityResolver to quickly map the queries
to appropriate entities.

7. Deprecated QueryEngine.lookupEntity in favor of 
QueryEngine.getEntityResolver().lookup...().

8. Added support for flattened relationships.  Modeller now suggests all
available paths from the source entity to the destination entity for selection.
For simple flattened  relationships that span a many-many link table consisting
solely of foreign keys to the linked rows, Cayenne will automatically add/remove
the link records.   In that case, there is no need to have an ObjEntity for the
link record, and this is in fact discouraged.  All other flattened relationships
are set "readOnly" and cannot be modified.

9. Changed ObjectId to use a Class instead of the name of the ObjEntity.
Removed getObjEntityName() as a consequence.

10. Deprecated OperationSorter.sortQueries(Object[]).

11. PersistenceState is now a real class instead of an interface;
CayenneDataObject.persistenceStateString() has been deprecated and moved into
the PersistenceState class as persistenceStateName().

12. Many general cleanups related to logging, potential NullPointerExceptions
and other pitfalls as reported by jlint.

13. Updated the dependent JARs to their most recent versions.

14. Cleaned up the ant build files to better use property values instead of
hardcoded file or directory names.

15. Relationships between DataObjects in different DataContexts are prevented.

