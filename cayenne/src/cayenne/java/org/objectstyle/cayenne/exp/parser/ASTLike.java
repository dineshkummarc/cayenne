/* Generated By:JJTree: Do not edit this line. ASTLike.java */

package org.objectstyle.cayenne.exp.parser;

import org.objectstyle.cayenne.exp.Expression;

class ASTLike extends SimpleNode {
    protected boolean negating;
    protected boolean ignoringCase;

    public ASTLike(int id) {
        super(id);
    }

    public ASTLike(ExpressionParser p, int id) {
        super(p, id);
    }

    protected String getExpressionOperator(int index) {
        if (negating) {
            return (ignoringCase) ? "not likeIgnoreCase" : "not like";
        }
        else {
            return (ignoringCase) ? "likeIgnoreCase" : "like";
        }
    }

    public int getType() {
        if (negating) {
            return (ignoringCase) ? Expression.NOT_LIKE_IGNORE_CASE : Expression.NOT_LIKE;
        }
        else {
            return (ignoringCase) ? Expression.LIKE_IGNORE_CASE : Expression.LIKE;
        }
    }

    boolean isNegating() {
        return negating;
    }

    void setNegating(boolean negating) {
        this.negating = negating;
    }

    boolean isIgnoringCase() {
        return ignoringCase;
    }

    void setIgnoringCase(boolean ignoringCase) {
        this.ignoringCase = ignoringCase;
    }
}
