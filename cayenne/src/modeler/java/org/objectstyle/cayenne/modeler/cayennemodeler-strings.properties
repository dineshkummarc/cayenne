cayenne.version = @CAYENNE_VERSION@
cayenne.build.date = @CAYENNE_BUILD_DATE@

cayenne.modeler.about.info = <font size='-1' face='Arial,Helvetica'><b>CayenneModeler</b><br> \
			(c) 2002-2003 The ObjectStyle Group \
			(<a href='http://objectstyle.org'>http://objectstyle.org/</a>)<br> \
			and individual authors of the software. \
			All rights reserved.<br><br> \
			This software is distributed free of charge under the terms \
			of The ObjectStyle Group license.<br>\
			Click \"View License\" for more details.</font><br><br>


// "New Project" dialog.

cayenne.modeler.project.cancel.button = Close
cayenne.modeler.project.cancel.button.ShortDescription = Do not create project

cayenne.modeler.project.app.name = Cayenne Application Project
cayenne.modeler.project.app.button = Create Application
cayenne.modeler.project.app.button.ShortDescription = Create new application project
cayenne.modeler.project.app.desc = Cayenne application project should be used for standalone \
    applications. It consists of "cayenne.xml" file and a set of linked DataMaps and DataNodes. \
    There can be only one "cayenne.xml" in any Java application. If you are creating a Cayenne-\
    based shared library or framework, use Data Map project instead.
    
cayenne.modeler.project.map.name = Cayenne DataMap Project
cayenne.modeler.project.map.button = Create DataMap
cayenne.modeler.project.map.button.ShortDescription = Create new DataMap project
cayenne.modeler.project.map.desc = DataMap project is a single DataMap that describes database \
    mapping. It does not contain any database connection settings. DataMaps are normally \
    distributed as a part of Cayenne-based library. They can be imported into Cayenne Application \
    projects that provide needed connection information.


// "Generate Classes" Dialog 
cayenne.modeler.classgenerator.generate.button = Generate
cayenne.modeler.classgenerator.generate.button.ShortDescription = Generate Java Classes

cayenne.modeler.classgenerator.cancel.button = Cancel
cayenne.modeler.classgenerator.cancel.button.ShortDescription = Cancel Class Generation

cayenne.modeler.classgenerator.choose.button = Select
cayenne.modeler.classgenerator.choose.button.ShortDescription = Select Output Directory

// DbEntityValidation Dialog
cayenne.modeler.dbentityvalidation.generateopts.button = Continue
cayenne.modeler.dbentityvalidation.generateopts.button.ShortDescription = Continue With DB Schema Generation

cayenne.modeler.dbentityvalidation.cancel.button = Cancel
cayenne.modeler.dbentityvalidation.cancel.button.ShortDescription = Cancel DB Schema Generation
