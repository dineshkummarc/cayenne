<?xml version="1.0"?>


<project name="cayenne_sub" default="compile">
  <property name="src" value="."  />
  <property name="plist.grammar" value=
  "${src}/org/objectstyle/cayenne/wocompat/parser"/>


  <target name="clean" depends="javacc_clean">
    <delete dir="${build}" />
  </target>

  <target name="javacc_clean">
    <delete>
        <fileset dir="${plist.grammar}" includes="**/*.java"/>
    </delete>
  </target>

  <target name="prepare">
     <mkdir dir="${build}/classes" />
  </target>


  <target   name="javacc_check"
            description="Checks if we need to run JavaCC on plist grammar">
            <uptodate property="plistBuild.notRequired" targetfile=
            "${plist.grammar}/Parser.java" >
                <srcfiles dir= "${plist.grammar}" includes="Parser.jj"/>
            </uptodate>
  </target>


  <target   name="javacc"
            depends="javacc_check"
            unless="plistBuild.notRequired"
            description="Runs JavaCC on plist grammar">
    <java dir="${basedir}" fork="true" classname="COM.sun.labs.javacc.Main">
         <classpath>
           <fileset dir="${basedir}/..">
               <include name="otherlib/*.jar"/>
               <include name="otherlib/*.zip"/>
           </fileset>
         </classpath>
         <arg value="-OUTPUT_DIRECTORY=${plist.grammar}"/>
         <arg value="${plist.grammar}/Parser.jj"/>
     </java>
  </target>


  <target name="compile" depends="prepare,javacc">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}/classes" debug="on" deprecation="on">
         <classpath>
           <pathelement location="${classpath}"/>
           <fileset dir="${basedir}/..">
               <include name="otherlib/*.jar"/>
           </fileset>
         </classpath>
    </javac>
    
    <!-- Copy XML files -->
    <copy todir="${build}/classes">
       <fileset dir="${src}" >
          <include name="org/**/*.xml"/>
       </fileset>
    </copy>
    <!-- Copy Velocity template files -->
    <copy todir="${build}/templates">
       <fileset dir="${src}/templates" >
          <include name="**/*.vm"/>
       </fileset>
    </copy>
  </target>
</project>
