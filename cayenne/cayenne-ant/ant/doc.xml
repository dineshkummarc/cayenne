<?xml version="1.0"?>

<!-- ================================================= -->
<!--         Cayenne documentation buildfile.          -->
<!-- ================================================= -->
<project default="...">
	
	<!-- can't use common build folder, as Anakia requires relative path -->
	<property name="build.suffix" value="build/ant/docs"/>
	<property name="build.docs" value="${cayenne.other}/${build.suffix}"/>
	<property name="build.pdf" value="${build.docs}/classes"/>
	<property name="xdocs" value="${cayenne.other}/xdocs"/>
	<property name="parser.dir.exp"
		value="${cayenne.java}/src/cayenne/java/org/objectstyle/cayenne/exp/parser"/>
	<property name="parser.base.exp" value="ExpressionParser"/>
	
	<!-- ========================================== -->
	<!-- Builds Cayenne documentation.              -->
	<!-- ========================================== -->
	<target name="doc" depends="doc-img,grammars">
		
		<!-- Assemble project.xml -->
		
		<mkdir dir="${build.docs}"/>
		
		<loadfile property="project.toc" srcFile="${xdocs}/stylesheets/toc.xml"/>
		<copy tofile="${build.docs}/project.xml"
			file="${xdocs}/stylesheets/project.xml">
			<filterset begintoken="&lt;!--@" endtoken="@--&gt;">
				<filter token="TOC" value="${project.toc}"/>
			</filterset>
		</copy>
		
		<!-- Build HTML documentation -->
		<taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask">
			<classpath refid="classpath-anakia"/>
		</taskdef>
		
		<mkdir dir="${dist}/doc/dtd"/>
		
		<!-- 'projectFile' must be a relative reference... -->
		<anakia basedir="${xdocs}" destdir="${dist}/doc" extension=".html"
			style="cayenne.vsl" projectFile="../${build.suffix}/project.xml"
			excludes="**/stylesheets/**" includes="**/*.xml"
			lastModifiedCheck="true" templatePath="${xdocs}/stylesheets">
		</anakia>
		
		<!-- copy DTD's -->
		<copy todir="${dist}/doc/dtd">
			<fileset dir="${cayenne.java}/src/cayenne/dtd" includes="**/*.dtd"/>
		</copy>
		
		<!-- copy all licenses & release notes -->
		<copy todir="${dist}/doc/licenses">
			<fileset dir="${license.dir}" includes="**/**"/>
		</copy>
		
		<!-- Assemble License HTML page -->
		<loadfile property="license.text" srcFile="${license.dir}/LICENSE.txt"/>
		<move tofile="${build.docs}/license.html" file="${dist}/doc/license.html">
			<filterset begintoken="&lt;!--@" endtoken="@--&gt;">
				<filter token="LICENSE" value="${license.text}"/>
			</filterset>
		</move>
		<move tofile="${dist}/doc/license.html"
			file="${build.docs}/license.html"/>
	</target>
	
	<!-- ========================================== -->
	<!-- Builds documentation for the JavaCC Grammars. -->
	<!-- ========================================== -->
	<target name="grammars">
		<mkdir dir="${dist}/doc/grammar"/>
		
		<ant antfile="${basedir}/ant/parser.xml" target="jjdoc" inheritrefs="true"
			dir="${cayenne.java}">
			<property name="parser.dir" value="${parser.dir.exp}"/>
			<property name="parser.base" value="${parser.base.exp}"/>
			<property name="parser.doc.dir" value="${dist}/doc/grammar"/>
		</ant>
	</target>
	
	<!-- ========================================== -->
	<!-- Copies documentation images in the target  -->
	<!-- directory.                                 -->
	<!-- ========================================== -->
	<target name="doc-img">
		<!-- copy images -->
		<copy todir="${dist}/doc/images" filtering="no">
			<fileset dir="${xdocs}/images">
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
				<include name="**/*.css"/>
			</fileset>
		</copy>
		
		<!-- copy modeler buttons -->
		<mkdir dir="${dist}/doc/images/modeler"/>
		<copy todir="${dist}/doc/images/modeler" filtering="no" flatten="yes">
			<fileset dir="${cayenne.java}/src/modeler/java">
				<include name="**/*.gif"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
			</fileset>
		</copy>
	</target>
	
	<!-- ========================================== -->
	<!-- Builds PDF documentation                   -->
	<!-- ========================================== -->
	<target name="pdf" depends="doc-img">
		
		<!-- Compile PDF Builder -->
		<compile-1_5 destdir="${build.pdf}" srcref="srcpath-pdf-builder"
			classpathref="classpath-pdf"/>
		
		<java classname="org.objectstyle.cayenne.tools.pdf.PDFBuilder"
			failonerror="true" fork="true" dir="${cayenne.other}">
			<arg value="xdocs/modelerguide/"/>
			<arg value="CayenneModeler Guide"/>
			<arg value="${dist}/doc/modelerguide.pdf"/>
			<classpath>
				<path refid="classpath-pdf"/>
				<path location="${build.pdf}"/>
			</classpath>
		</java>
		
		<java classname="org.objectstyle.cayenne.tools.pdf.PDFBuilder"
			failonerror="true" fork="true" dir="${cayenne.other}">
			
			<arg value="xdocs/userguide/"/>
			<arg value="User Guide"/>
			<arg value="${dist}/doc/userguide.pdf"/>
			<classpath>
				<path refid="classpath-pdf"/>
				<path location="${build.pdf}"/>
			</classpath>
		</java>
		
	</target>
</project>


